<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables Globales y Creacion de Surfaces y Bacgrounds

//variables globales    -----------------------------------------------------------

//STEP
global.step_speed = room_speed;   //el valor de "speed" de la room. Son el numero de steps por segundo. En este caso, 30


//UNIT
//unit se referira siempre al tamaño en altura del sprite de player, que utilizaremos como medida universal
global.unit = view_wview /16; //en este caso es 32.  view_width (480) entre 16 = 30

global.unit_per_sec = global.unit / global.step_speed;  //distancia de una unidad en un segundo

global.grav = global.unit * 0.17 ;     //constante universal de gravedad en el juego
//Si "unit" son 2 metros, la gravedad serian 5.42 pixeles por step. Q a su vez son 0.17 units


//TEMPO
//Guarda el numero de steps que dura cada "compas" del ritmo q hay permanentemente detras del juego
global.tempo = global.step_speed * 4;   //en este caso, tempo son 4 segundos
//divisiones de "tempo" como si fuera un compas
//IMPORTANTE las variables globales guardan la longitud de la "nota", mientras q las variables locales guardan el cambio q se produce al final de cada nota.
//ej.  "global.blanca" y "blanca" 
global.blanca = global.tempo / 2;
global.negra = global.tempo / 4;
global.corchea = global.tempo / 8;



//Create Backgrounds    --------------------------------------------------------------------
instance_create(0, 0, obj_bg_black);        //depth 60
//instance_create(0, 0, obj_bg_fog);          //depth 55
instance_create(0, 0, obj_bg_1);            //depth 50
instance_create(0, 0, obj_bg_2);            //depth 40 
instance_create(0, 0, obj_bg_3);            //depth 30
instance_create(0, 0, obj_bg_4);            //depth 20
instance_create(0, 0, obj_bg_foreground);   //depth -90


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Backgrounds y Parallax



if (obj_player.x &gt; 0) &amp;&amp; (obj_player.player_dir != 0)
{
    //esta es la velocidad horizontal (en x). Añadir velocidad Vertical mas tarde
    obj_bg_1.x += obj_player.hsp * 0.78;
    obj_bg_2.x += obj_player.hsp * 0.44;
    obj_bg_3.x += obj_player.hsp * 0.16;
    obj_bg_foreground.x -= obj_player.hsp * 0.8;
}

//bg_black y bg_4 no se mueven, y bj_fog tiene su propio movimiento


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
